# -*- coding: utf-8 -*-
"""CaballoFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tyTsH8g8v8Tg3WE2X-Lyx6PkE2omVi-v
"""

n=6
tablero = [[0 for i in range(n)]for i in range(n)] 
x=int(input("Ingresa el numero de la coordenada x: "))
y=int(input("Ingresa el numero de la coordenada y: "))
tablero[x][y]=1
tablero

def posibles_mov(x_actual, y_actual):
    mov_x = [2, 1, 2, 1, -2, -1, -2, -1]
    mov_y = [1, 2, -1, -2, 1, 2, -1, -2]
    lista_mov = []
    for i in range(8):
        if x_actual+mov_x[i] >= 0 and x_actual+mov_x[i] <= n-1 and y_actual+mov_y[i] >= 0 and y_actual+mov_y[i] <= n-1 and tablero[x_actual+mov_x[i]][y_actual+mov_y[i]] == 0:
            lista_mov.append([x_actual+mov_x[i], y_actual+mov_y[i]])
    return lista_mov

def resuelve_tour():
    contador = 2
    x_actual = x
    y_actual = y
    for i in range((n*n)-1):
        mov_pos = posibles_mov(x_actual, y_actual)
        cam_min = mov_pos[0]
        for j in mov_pos:
            if len(posibles_mov(j[0], j[1])) <= len(posibles_mov(cam_min[0], cam_min[1])):
                cam_min = j
        x_actual = cam_min[0]
        y_actual = cam_min[1]
        tablero[x_actual][y_actual] = contador
        contador += 1
        
def marcar():
    for i in range(n):
        for j in range(n):
            print(tablero[i][j], end="| ")
        print("\n")

resuelve_tour()    
marcar()